name: Test notes app
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
    branches:
      - main

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DATABASE_DIRECT_URL: ${{ secrets.DATABASE_DIRECT_URL }}
  PORT: ${{ vars.BACKEND_PORT }}
  TOKEN_KEY: ${{ vars.BACKEND_TOKEN_KEY }}
  MAILER_USER: ${{ vars.MAILER_USER }}
  MAILER_PASSWORD: ${{ secrets.MAILER_PASSWORD }}
  MAIL_NOREPLY: ${{ vars.MAIL_NOREPLY }}
  # for testing in this GitHub Action job
  HOME_URL: http://localhost:5173

jobs:
  cypress-tests-run:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Install backend
        working-directory: ./server
        run: npm ci
      - name: Deploy prisma changes
        working-directory: ./server
        run: npm run prisma:deploy
      - name: Start backend
        working-directory: ./server
        run: npm run start &
      - run: echo "Backend running"

      - name: Install Cypress on FrontEnd and run E2E tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client
          build: npm ci
          start: npm run dev
          wait-on: 'http://127.0.0.1:5173'
          browser: chrome
        env:
          cypress_test_user: ${{ secrets.TEST_USER }}
          cypress_test_user_password: ${{ secrets.TEST_USER_PASSWORD }}
          cypress_test_user_name: ${{ secrets.USER_NAME }}

      - name: Upload error screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-snapshots
          path: client/cypress/screenshots

      - name: Login to Docker private repo
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_LOGIN_TOKEN }}

      - name: Build and push Backend Docker image
        working-directory: ./server
        # add more env vars when deploying to cloud
        env:
          HOME_URL: ${{ vars.HOME_URL_GCP }}
          NODE_ENV: production
        run: |
          echo "Start building Docker backend image"
          docker build -t nikolaykolov/notes-app-backend:latest .
          docker push nikolaykolov/notes-app-backend:latest
          echo "Docker backend image pushed to repo"
          
      - name: Build and push Frontend Docker image
        working-directory: ./client
        # add more env vars when deploying to cloud
        env:
          NODE_ENV: production
        # Add docker image build URL here
        run: |
          echo "Start building Docker frontend image"
          docker build -t nikolaykolov/notes-app-frontend:latest --build-arg="NGINX_CONF=nginx-noproxy-cloud.conf" --build-arg="PORT=8080" --build-arg="BACKEND_URL=${{ vars.VITE_BACKEND_URL_GCP }}" .
          docker push nikolaykolov/notes-app-frontend:latest
          echo "Docker frontend image pushed to repo"

      - run: echo "üçè This job's status is ${{ job.status }}."

      # Authenticate to Google Cloud Platform with Artifacts Registry service account
      - id: "auth-gcp-docker"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_DOCKER_JSON_KEY }}"

      # Print GCP data
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Docker auth"
        run: gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev --quiet

      # Get docker images data
      - name: "List docker images available"
        run: "docker images"

      - name: "Push frontend to GCP Artifacts Registry"
        run: |
          echo "Push Docker frontend image"
          docker image tag nikolaykolov/notes-app-frontend:latest \
          ${{ vars.GCP_REGION }}-docker.pkg.dev/iron-foundry-428913-h2/notes-app-repo-01/notes-app-frontend:latest
          docker push ${{ vars.GCP_REGION }}-docker.pkg.dev/iron-foundry-428913-h2/notes-app-repo-01/notes-app-frontend:latest
          echo "Pushed Docker frontend image successfully"

      - name: "Push backend to GCP Artifacts Registry"
        run: |
          echo "Push Docker backend image"
          docker image tag nikolaykolov/notes-app-backend:latest \
          ${{ vars.GCP_REGION }}-docker.pkg.dev/iron-foundry-428913-h2/notes-app-repo-01/notes-app-backend:latest
          docker push ${{ vars.GCP_REGION }}1-docker.pkg.dev/iron-foundry-428913-h2/notes-app-repo-01/notes-app-backend:latest
          echo "Pushed Docker backend image successfully"

      # Authenticate to Google Cloud Platform with Google Cloud Run service account
      - id: "auth-gcp-run"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_RUN_JSON_KEY }}"

      - name: Deploy Backend to Cloud Run
        id: deploy-be
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.GCP_BE_SERVICE_NAME }}
          region: ${{ vars.GCP_REGION }}
          image: ${{ vars.GCP_REGION }}-docker.pkg.dev/iron-foundry-428913-h2/notes-app-repo-01/notes-app-backend:latest

      - name: Deploy Frontend to Cloud Run
        id: deploy-fe
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.GCP_FE_SERVICE_NAME }}
          region: ${{ vars.GCP_REGION }}
          image: ${{ vars.GCP_REGION }}-docker.pkg.dev/iron-foundry-428913-h2/notes-app-repo-01/notes-app-frontend:latest